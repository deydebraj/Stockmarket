{"version":3,"sources":["components/Find.js","components/Titles.js","components/StockComp.js","App.js","serviceWorker.js","index.js","components/right.jpg","components/left.jpg"],"names":["Find","props","react_default","a","createElement","onSubmit","getStocks","src","Right","alt","className","type","name","placeholder","required","id","Titles","Left","StockComp","srch","volume","error","App","state","loading","stock","current","time","undefined","_callee","e","api_call","searchData","searchDataConvert","arrSearch","currentPriceSearch","volSearch","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","stockname","value","console","log","fetch","concat","sent","json","Object","keys","map","_","Date","_this","setState","stop","response","data","stockSymbol","t1","res","currentPrice","date","lastUpdated","toLocaleTimeString","this","components_Titles","components_Find","components_StockComp","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9109ac13.chunk.js","sourcesContent":["import React from 'react'\r\nimport Right from './right.jpg'\r\nconst Find = (props) => {\r\n        return(\r\n            <form onSubmit = {props.getStocks}>    \r\n                    <img src={Right} alt=\"rightimage\"></img>\r\n                    <div className=\"text-right\">\r\n                        <h1>Search Stock by Stock Symbol</h1>\r\n                        <input type=\"text\" name=\"stockname\" placeholder=\"enter stock-symbol (e.g. MSFT, AAPL, GOOGL etc...)\" required></input>\r\n                        <br/>\r\n                        <button id=\"btn\">GET STOCK</button>\r\n                    </div>\r\n            </form>\r\n    )\r\n}\r\nexport default Find","import React from 'react'\r\nimport Left from './left.jpg'\r\nconst Titles = () =>{\r\n        return(\r\n            <div className=\"leftside-title\">\r\n                <img src={Left} alt=\"leftimage\"></img>\r\n                <div className=\"text-left\">\r\n                    <h1>Stock Market LIVE</h1>\r\n                </div>\r\n            </div>\r\n            \r\n        )    \r\n    }\r\n\r\nexport default Titles","import React from 'react'\r\n\r\n\r\nconst StockComp = (props) => {    \r\n        return(\r\n            <div className=\"stock-display\">\r\n                {props.srch && <p>Stock Price: ${props.srch}</p>}\r\n                {props.volume && <p>Stock Volume: ${props.volume}</p>}\r\n                {props.error && <p>{props.error}</p>}\r\n            </div>\r\n        )    \r\n}\r\nexport default StockComp","import React from 'react';\nimport Find from './components/Find';\nimport Titles from './components/Titles';\nimport StockComp from './components/StockComp';\n\nclass App extends React.Component {\n  state = {\n    loading: true,\n    stock: null,\n    current: null,\n    time: false,\n    srch: null,\n    volume: null,\n    error: undefined\n  }\n\n  async componentDidMount(){\n\n    //DOW JONES SECTION\n\n    const urlDow = \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=DOW&interval=5min&apikey=J4YRCRC8QOA33Q922\"\n    const response = await fetch(urlDow)\n    var data = await response.json()\n    var stockSymbol = data[\"Meta Data\"][\"2. Symbol\"] \n    \n    //converting the json data into array\n    var t1 = data[\"Time Series (5min)\"];\n    var res= Object.keys(t1).map(function(_) { return t1[_]; })\n    //fetching the current stock value\n    var currentPrice = res[0][\"1. open\"]\n\n    //Display TIme \n    var date = new Date();\n    var lastUpdated = date.toLocaleTimeString();\n\n    //console.log(data[\"Time Series (5min)\"])\n    this.setState({\n      loading: false,\n      stock: stockSymbol,\n      current: currentPrice,\n      time: lastUpdated\n    })\n  }\n  \n  \n  \n  \n  //SEARCHING YOUR STOCK\n\n  getStocks = async(e) => {\n    e.preventDefault();\n    const name = e.target.elements.stockname.value;\n    console.log(name)\n    const api_call = await fetch (`https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${name}&interval=5min&apikey=J4YRCRC8QOA33Q92`);\n    const searchData = await api_call.json();\n    var searchDataConvert = searchData[\"Time Series (5min)\"];\n    console.log(searchDataConvert)\n    var arrSearch = Object.keys(searchDataConvert).map(function(_) { return searchDataConvert[_]; })\n    var currentPriceSearch = arrSearch[0][\"1. open\"]\n    var volSearch = arrSearch[0][\"5. volume\"]\n    var date = new Date();\n    if(name){\n      this.setState({\n        srch: currentPriceSearch,\n        volume: volSearch,\n        error : \"\"\n      })\n    }\n    else{\n        this.setState({\n          srch: null,\n          volume: null,\n          error : \"Please enter the stock symbol\"\n        })\n    }\n  } \n\n\n  render(){\n   return(\n     <div>\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-6 no-gutters\">\n          <div className='leftside'>\n              <Titles />\n              <div className=\"dowjones\">\n                {this.state.loading || !this.state.stock ? <div>loading...</div> \n                  :\n                  <div className=\"dowjonesinside\">\n                    <p>Stock Symbol: {this.state.stock}</p>\n                    <p>Current Price: ${this.state.current}</p>\n                    <p>Last Updated: {this.state.time}</p>                \n                  </div>}\n              </div>\n              \n          </div>\n       </div>\n      \n        <div className=\"col-md-6 no-gutters\">\n            <div className='rightside'>\n             <Find \n              getStocks = {this.getStocks}\n             />\n            <StockComp \n            srch = {this.state.srch}\n            volume = {this.state.volume}\n            error = {this.state.error}\n            />\n           \n            </div>\n        </div> \n      </div>\n     </div>\n     \n   )\n  }\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/right.fd989d41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/left.30ca908c.jpg\";"],"sourceRoot":""}